[{"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js":"1","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js":"2","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js":"3","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js":"4","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllPersonList.js":"5","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js":"6","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Dialogs\\LoadingProgress.js":"7","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js":"8","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Dialogs\\ContextErrorMessage.js":"9","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js":"10","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonDetails.js":"11","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js":"12","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js":"13","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js":"14","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Pages\\About.js":"15","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Pages\\SignIn.js":"16","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Layout\\Header.js":"17","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js":"18","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js":"19","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js":"20","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js":"21","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js":"22"},{"size":149,"mtime":1610656338169,"results":"23","hashOfConfig":"24"},{"size":5367,"mtime":1610831679972,"results":"25","hashOfConfig":"24"},{"size":1786,"mtime":1609421777146,"results":"26","hashOfConfig":"24"},{"size":451,"mtime":1609421777144,"results":"27","hashOfConfig":"24"},{"size":2328,"mtime":1610656337969,"results":"28","hashOfConfig":"24"},{"size":2350,"mtime":1610656337970,"results":"29","hashOfConfig":"24"},{"size":1151,"mtime":1610656337973,"results":"30","hashOfConfig":"24"},{"size":5456,"mtime":1610656337953,"results":"31","hashOfConfig":"24"},{"size":2305,"mtime":1610656337972,"results":"32","hashOfConfig":"24"},{"size":3512,"mtime":1610656337994,"results":"33","hashOfConfig":"24"},{"size":3012,"mtime":1610656337992,"results":"34","hashOfConfig":"24"},{"size":769,"mtime":1610656337959,"results":"35","hashOfConfig":"24"},{"size":853,"mtime":1610656337956,"results":"36","hashOfConfig":"24"},{"size":381,"mtime":1609421777147,"results":"37","hashOfConfig":"24"},{"size":0,"mtime":1610656338004,"results":"38","hashOfConfig":"24"},{"size":1883,"mtime":1610656338171,"results":"39","hashOfConfig":"24"},{"size":311,"mtime":1610656338003,"results":"40","hashOfConfig":"24"},{"size":1883,"mtime":1610656338171,"results":"41","hashOfConfig":"24"},{"size":0,"mtime":1610656338004,"results":"42","hashOfConfig":"24"},{"size":311,"mtime":1610656338003,"results":"43","hashOfConfig":"24"},{"size":2305,"mtime":1610656337972,"results":"44","hashOfConfig":"24"},{"size":1151,"mtime":1610656337973,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1vmktpw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js",[],["96","97"],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js",["98","99"],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllPersonList.js",["100"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './Dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './Dialogs/LoadingProgress';\r\nimport PersonDetails from './PersonDetails';\r\n\r\n/**\r\n * Shows all accounts of the bank.\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass AllPersonList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n      accounts: [],\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.loadPersons();\r\n  }\r\n\r\n  /** gets the account list for this account */\r\n  loadPersons = () => {\r\n    ManagementAPI.getAPI().getAllPersons().then(persons =>\r\n      this.setState({\r\n        persons: persons,\r\n        loadingInProgress: false, // loading indicator\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { persons, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n          {\r\n            persons.map(person => <PersonDetails key={person.getID()}\r\n            personID={person.getRole().toString()} personID={person.getID().toString()} />)\r\n          }\r\n          <LoadingProgress show={loadingInProgress} />\r\n          <ContextErrorMessage error={loadingError} contextErrorMsg={`The list of all person of the bank could not be loaded.`} onReload={this.loadPersons} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nAllPersonList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(AllPersonList);\r\n","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Dialogs\\LoadingProgress.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js",["101"],"/**import ModuleBO from './api/ModuleBO';\r\nimport ParticipationBO from './api/ParticipationBO';\r\nimport ProjectBO from './api/ProjectBO';\r\nimport ProjectTypeBO from './api/ProjectTypeBO';\r\nimport RatingBO from './api/RatingBO';\r\nimport RoleBO from './api/RoleBO';\r\nimport SemesterBO from './api/SemesterBO';\r\nimport StatusBO from './api/StatusBO';\r\nimport StudentBO from './api/StudentBO';*/\r\nimport PersonBO from './PersonBO';\r\n\r\nexport default class ManagementAPI {\r\n\r\n    static #api = null;\r\n\r\n\r\n  //Local Python backend\r\n  #managementServerBaseURL = '/management';\r\n\r\n\r\n\r\n\r\n\r\n // Person  related\r\n  #getPersonsURL = () => `${this.#managementServerBaseURL}/person`;\r\n  #addPersonURL = () => `${this.#managementServerBaseURL}/person`;\r\n  #getPersonURL = (id) => `${this.#managementServerBaseURL}/person/${id}`;\r\n  #updatePersonURL = (id) => `${this.#managementServerBaseURL}/person/${id}`;\r\n  #deletePersonURL = (id) => `${this.#managementServerBaseURL}/person/${id}`;\r\n  #searchPersonURL = (personName) => `${this.#managementServerBaseURL}/person-by-name/${personName}`;\r\n\r\n  #getProjectsURL = () => `${this.#managementServerBaseURL}/project`;\r\n  #addProjectURL = () => `${this.#managementServerBaseURL}/project`;\r\n  #getProjectURL = (id) => `${this.#managementServerBaseURL}/project/${id}`;\r\n  #updateProjectURL = (id) => `${this.#managementServerBaseURL}/project/${id}`;\r\n  #deleteProjectURL = (id) => `${this.#managementServerBaseURL}/project/${id}`;\r\n  #searchProjectURL = (projectOwner,projectName) => `${this.#managementServerBaseURL}/project-by-owner/${projectOwner}`;\r\n\r\n\r\n\r\n\r\n  static getAPI() {\r\n    if (this.#api == null) {\r\n      this.#api = new ManagementAPI();\r\n    }\r\n    return this.#api;\r\n  }\r\n\r\n  #fetchAdvanced = (url, init) => fetch(url, init)\r\n    .then(res => {\r\n      // The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n      if (!res.ok) {\r\n        throw Error(`${res.status} ${res.statusText}`);\r\n      }\r\n      return res.json();\r\n    }\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getPerson() {\r\n    return this.#fetchAdvanced(this.#getPersonURL()).then((responseJSON) => {\r\n      let personBOs = PersonBO.fromJSON(responseJSON);\r\n      // console.info(personBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(personBOs);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  getPerson(personID) {\r\n    return this.#fetchAdvanced(this.#getPersonURL(personID)).then((responseJSON) => {\r\n      // We always get an array of PersonBOs.fromJSON, but only need one object\r\n      let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\r\n      // console.info(responsePersonBO);\r\n      return new Promise(function (resolve) {\r\n        resolve(responsePersonBO);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Adds a Person and returns a Promise, which resolves to a new PersonBO object with the\r\n   * firstName and lastName of the parameter personBO object.\r\n   *\r\n   * @param {PersonBO} personBO to be added. The ID of the new person is set by the backend\r\n   * @public\r\n   */\r\n\r\n  addPerson(personBO) {\r\n    return this.#fetchAdvanced(this.#addPersonURL(), {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain',\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(personBO)\r\n    }).then((responseJSON) => {\r\n      // We always get an array of PersonBOs.fromJSON, but only need one object\r\n      let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\r\n      // console.info(projectBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(responsePersonBO);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Updates a person and returns a Promise, which resolves to a PersonBO.\r\n   *\r\n   * @param {PersonBO} personBO to be updated\r\n   * @public\r\n   */\r\n\r\n  updatePerson(personBO) {\r\n    return this.#fetchAdvanced(this.#updatePersonURL(personBO.getID()), {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain',\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(personBO)\r\n    }).then((responseJSON) => {\r\n      // We always get an array of CustomerBOs.fromJSON\r\n      let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\r\n      // console.info(projectBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(responsePersonBO);\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns a Promise, which resolves to an Array of PersonBOs\r\n   *\r\n   * @param {Number} personID to be deleted\r\n   * @public\r\n   */\r\n\r\n\r\n\r\ndeletePerson(personID) {\r\n    return this.#fetchAdvanced(this.#deletePersonURL(personID), {\r\n      method: 'DELETE'\r\n    }).then((responseJSON) => {\r\n      // We always get an array of PersonBOs.fromJSON\r\n      let responsePersonBO = PersonBO.fromJSON(responseJSON)[0];\r\n      // console.info(accountBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(responsePersonBO);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n   /**\r\n   * Returns a Promise, which resolves to an Array of PersonBOs\r\n   *\r\n   * @param {Number} personID to be deleted\r\n   * @public\r\n   */\r\n\r\n   searchPerson(personName) {\r\n    return this.#fetchAdvanced(this.#searchPersonURL(personName)).then((responseJSON) => {\r\n      let personBOs = PersonBO.fromJSON(responseJSON);\r\n      // console.info(personBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(personBOs);\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Dialogs\\ContextErrorMessage.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js",["102","103"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Paper } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './Dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './Dialogs/LoadingProgress';\r\n\r\n/**\r\n * Renders a AccountBO object within a ListEntry and provides a delete button to delete it.\r\n *\r\n * @see See Material-UIs [Lists](https://material-ui.com/components/lists/)\r\n * @see See Material-UIs [ListItem](https://material-ui.com/api/list-item/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ProjectDetail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init state\r\n    this.state = {\r\n      customer: null,\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProject();\r\n  }\r\n\r\n  /** gets the balance for this account */\r\n  getProject = () => {\r\n    ManagementAPI.getAPI().getProject(this.props.projectID).then(project =>\r\n      this.setState({\r\n        project: project,\r\n        loadingInProgress: false,\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          project: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, projectID, ownerID } = this.props;\r\n    const { project, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' className={classes.root}>\r\n\r\n        <Typography variant='h6'>\r\n          Project\r\n        </Typography>\r\n        <Typography className={classes.ProjectEntry}>\r\n          ID: {projectID}\r\n        </Typography>\r\n        {\r\n          project ?\r\n            <Typography>\r\n              Project: {project.getName()}, {project.getSemester()},{project.getModule()},\r\n              {project.getShortDescription()}, {project.getExternalPartnerlist()}, {project.getCapacity()},\r\n              {project.getBDAP()}, {project.getBBLP()}, {project.getBDLP()}, {project.getPDL()}, {project.getLanguage()},\r\n              {project.getRoom()}, {project.getSpecialRoom()}, {project.getFlag()}, {project.getStatus()},\r\n              {project.getProjectType()}, {project.getOwner()}\r\n            </Typography>\r\n            : null\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={loadingError} contextErrorMsg={`The data of project id ${projectID} could not be loaded.`} onReload={this.getProject} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  projectEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDetail.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The projectID to be rendered */\r\n  projectID: PropTypes.string.isRequired,\r\n  /** The projectID to be rendered */\r\n  projectID: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDetail);","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonDetails.js",["104"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Paper } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './Dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './Dialogs/LoadingProgress';\r\n\r\n/**\r\n * Renders a AccountBO object within a ListEntry and provides a delete button to delete it.\r\n *\r\n * @see See Material-UIs [Lists](https://material-ui.com/components/lists/)\r\n * @see See Material-UIs [ListItem](https://material-ui.com/api/list-item/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass PersonDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init state\r\n    this.state = {\r\n      Person: null,\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getPerson();\r\n  }\r\n\r\n  /** gets the balance for this account */\r\n  getPerson = () => {\r\n    ManagementAPI.getAPI().getPerson(this.props.personID).then(person =>\r\n      this.setState({\r\n        person: person,\r\n        loadingInProgress: false,\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          person: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, PersonID } = this.props;\r\n    const { person, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' className={classes.root}>\r\n\r\n        <Typography variant='h6'>\r\n          Person\r\n        </Typography>\r\n        <Typography>\r\n          ID: {person.getID()}\r\n        </Typography>\r\n        {\r\n          person ?\r\n            <Typography>\r\n              Person: {person.getRole()}\r\n            </Typography>\r\n            : null\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={loadingError} contextErrorMsg={`The data of person id ${person.getID()} could not be loaded.`} onReload={this.getPerson} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  accountEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nPersonDetails.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The customerID to be rendered */\r\n  StudentID: PropTypes.string.isRequired,\r\n  /** The accountID to be rendered */\r\n  PersonID: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(PersonDetails);\r\n","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js",["105"],"export default class BusinessObject {\r\n//Text\r\n\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n    }\r\n\r\n\r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n\r\n    toString() {\r\n        let result = \" \";\r\n        for (var prop in this) {\r\n        result += prop + \":\" + this [prop] +\" \";\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Pages\\About.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Pages\\SignIn.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\Layout\\Header.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js",[],"C:\\Users\\ekrem\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":22},{"ruleId":"110","severity":1,"message":"114","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":62,"column":52,"nodeType":"117","endLine":62,"endColumn":88},{"ruleId":"118","severity":1,"message":"119","line":77,"column":3,"nodeType":"120","messageId":"121","endLine":86,"endColumn":4},{"ruleId":"110","severity":1,"message":"122","line":58,"column":33,"nodeType":"112","messageId":"113","endLine":58,"endColumn":40},{"ruleId":"123","severity":1,"message":"124","line":109,"column":3,"nodeType":"125","messageId":"121","endLine":109,"endColumn":12},{"ruleId":"110","severity":1,"message":"126","line":58,"column":22,"nodeType":"112","messageId":"113","endLine":58,"endColumn":30},{"ruleId":"127","severity":1,"message":"128","line":21,"column":32,"nodeType":"129","messageId":"130","endLine":21,"endColumn":43,"fix":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'AllProjectList' is defined but never used.","Identifier","unusedVar","'ManagementAPI' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-class-members","Duplicate name 'getPerson'.","MethodDefinition","unexpected","'ownerID' is assigned a value but never used.","no-dupe-keys","Duplicate key 'projectID'.","ObjectExpression","'PersonID' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property prop.","MemberExpression","unexpectedWhitespace",{"range":"134","text":"135"},"no-global-assign","no-unsafe-negation",[319,320],""]