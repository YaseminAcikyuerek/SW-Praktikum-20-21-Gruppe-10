[{"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js":"1","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js":"2","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js":"3","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js":"4","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js":"5","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js":"6","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js":"7","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllRatingList.js":"8","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllModuleList.js":"9","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingList.js":"10","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonList.js":"11","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectList.js":"12","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleDetails.js":"13","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js":"14","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js":"15","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentList.js":"16","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js":"17","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js":"18","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllParticipationList.js":"19","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ModuleBO.js":"20","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ParticipationBO.js":"21","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectTypeBO.js":"22","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StudentBO.js":"23","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\RatingBO.js":"24","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js":"25","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectBO.js":"26","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js":"27","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingListEntry.js":"28","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonForm.js":"29","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingDetails.js":"30","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectForm.js":"31","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingForm.js":"32","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProfileDropDown.js":"33","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectListEntry.js":"34","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonListEntry.js":"35","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\Role.js":"36","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StatusBO.js":"37","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\SemesterBO.js":"38","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentListEntry.js":"39","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentForm.js":"40","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js":"41","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js":"42","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonDeleteDialog.js":"43","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingDeleteDialog.js":"44","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentDeleteDialog.js":"45","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectDeleteDialog.js":"46","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationForm.js":"47","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationDeleteDialog.js":"48","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleList.js":"49","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleForm.js":"50","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleListEntry.js":"51","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleDeleteDialog.js":"52","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterList.js":"53","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeList.js":"54","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterForm.js":"55","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterListEntry.js":"56","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeForm.js":"57","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeListEntry.js":"58","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterDeleteDialog.js":"59","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeDeleteDialog.js":"60"},{"size":149,"mtime":1610907253682,"results":"61","hashOfConfig":"62"},{"size":6061,"mtime":1611887843434,"results":"63","hashOfConfig":"62"},{"size":451,"mtime":1610907253654,"results":"64","hashOfConfig":"62"},{"size":1449,"mtime":1611887962665,"results":"65","hashOfConfig":"62"},{"size":1151,"mtime":1610907253669,"results":"66","hashOfConfig":"62"},{"size":43061,"mtime":1611885644630,"results":"67","hashOfConfig":"62"},{"size":2320,"mtime":1611277345038,"results":"68","hashOfConfig":"62"},{"size":2250,"mtime":1611090951208,"results":"69","hashOfConfig":"62"},{"size":2256,"mtime":1611175475179,"results":"70","hashOfConfig":"62"},{"size":7397,"mtime":1611090666649,"results":"71","hashOfConfig":"62"},{"size":7366,"mtime":1611526393963,"results":"72","hashOfConfig":"62"},{"size":9260,"mtime":1611881271543,"results":"73","hashOfConfig":"62"},{"size":2641,"mtime":1611090951209,"results":"74","hashOfConfig":"62"},{"size":2217,"mtime":1611754330350,"results":"75","hashOfConfig":"62"},{"size":1121,"mtime":1611889412955,"results":"76","hashOfConfig":"62"},{"size":7631,"mtime":1611423963243,"results":"77","hashOfConfig":"62"},{"size":1892,"mtime":1611090951212,"results":"78","hashOfConfig":"62"},{"size":2055,"mtime":1611519646642,"results":"79","hashOfConfig":"62"},{"size":2435,"mtime":1611090666642,"results":"80","hashOfConfig":"62"},{"size":729,"mtime":1611090951206,"results":"81","hashOfConfig":"62"},{"size":892,"mtime":1611270843293,"results":"82","hashOfConfig":"62"},{"size":808,"mtime":1611090666638,"results":"83","hashOfConfig":"62"},{"size":924,"mtime":1611090951207,"results":"84","hashOfConfig":"62"},{"size":1424,"mtime":1611754330190,"results":"85","hashOfConfig":"62"},{"size":3432,"mtime":1610929881097,"results":"86","hashOfConfig":"62"},{"size":3883,"mtime":1611881271531,"results":"87","hashOfConfig":"62"},{"size":761,"mtime":1611090666637,"results":"88","hashOfConfig":"62"},{"size":5093,"mtime":1611090951209,"results":"89","hashOfConfig":"62"},{"size":8343,"mtime":1611090951211,"results":"90","hashOfConfig":"62"},{"size":3040,"mtime":1610929881099,"results":"91","hashOfConfig":"62"},{"size":21231,"mtime":1611885644795,"results":"92","hashOfConfig":"62"},{"size":10822,"mtime":1611090666656,"results":"93","hashOfConfig":"62"},{"size":4156,"mtime":1610907253672,"results":"94","hashOfConfig":"62"},{"size":5456,"mtime":1611324917822,"results":"95","hashOfConfig":"62"},{"size":4870,"mtime":1611526393964,"results":"96","hashOfConfig":"62"},{"size":935,"mtime":1610907363546,"results":"97","hashOfConfig":"62"},{"size":788,"mtime":1610907253660,"results":"98","hashOfConfig":"62"},{"size":988,"mtime":1610907253660,"results":"99","hashOfConfig":"62"},{"size":5435,"mtime":1611754330261,"results":"100","hashOfConfig":"62"},{"size":9534,"mtime":1611754330304,"results":"101","hashOfConfig":"62"},{"size":579,"mtime":1611337701953,"results":"102","hashOfConfig":"62"},{"size":479,"mtime":1611337701954,"results":"103","hashOfConfig":"62"},{"size":4258,"mtime":1611270843300,"results":"104","hashOfConfig":"62"},{"size":4472,"mtime":1610929881111,"results":"105","hashOfConfig":"62"},{"size":3811,"mtime":1611090666657,"results":"106","hashOfConfig":"62"},{"size":4260,"mtime":1611337701956,"results":"107","hashOfConfig":"62"},{"size":8974,"mtime":1611090951210,"results":"108","hashOfConfig":"62"},{"size":4471,"mtime":1611090666653,"results":"109","hashOfConfig":"62"},{"size":7478,"mtime":1611411888634,"results":"110","hashOfConfig":"62"},{"size":8253,"mtime":1611885644794,"results":"111","hashOfConfig":"62"},{"size":4552,"mtime":1611411888647,"results":"112","hashOfConfig":"62"},{"size":4237,"mtime":1611411888648,"results":"113","hashOfConfig":"62"},{"size":7780,"mtime":1611526393965,"results":"114","hashOfConfig":"62"},{"size":7871,"mtime":1611754330223,"results":"115","hashOfConfig":"62"},{"size":9211,"mtime":1611526393966,"results":"116","hashOfConfig":"62"},{"size":4624,"mtime":1611885644745,"results":"117","hashOfConfig":"62"},{"size":9333,"mtime":1611885644796,"results":"118","hashOfConfig":"62"},{"size":4825,"mtime":1611519646628,"results":"119","hashOfConfig":"62"},{"size":4395,"mtime":1611885644883,"results":"120","hashOfConfig":"62"},{"size":4347,"mtime":1611519646643,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"r6zi0g",{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"137"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js",[],["252","253"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js",["254"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js",[],["255","256"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllRatingList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllModuleList.js",[],["257","258"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonList.js",["259","260"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport { withRouter } from 'react-router-dom';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport PersonForm from './dialogs/PersonForm';\r\nimport PersonListEntry from './PersonListEntry';\r\n\r\n/**\r\n * Controlls a list of PersonListEntrys to create a accordion for each person.\r\n *\r\n * @see See [PersonListEntry](#personlistentry)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass PersonList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n//Achtung: hier Änderung von \"expandPerson\" in person\r\n    if (this.props.location.person) {\r\n      expandedID = this.props.location.expandPerson.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n      persons: [],\r\n      filteredPersons: [],\r\n      PersonFilter: '',\r\n      error: null,\r\n      loadingInProgress: false,\r\n      expandedPersonID: expandedID,\r\n      showPersonForm: false\r\n    };\r\n  }\r\n\r\n  /** Fetches all PersonBOs from the backend */\r\n  getPersons = () => {\r\n  console.log(\"vor fetch\")\r\n    ManagementAPI.getAPI().getPersons().then(personBOs =>\r\n        this.setState({               // Set new state when PersonBOs have been fetched\r\n          persons: personBOs,\r\n          filteredPersons: [...personBOs], // store a copy\r\n          loadingInProgress: false,   // disable loading indicator\r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({             // Reset state with error from catch\r\n            persons: [],\r\n            loadingInProgress: false, // disable loading indicator\r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getPersons();\r\n  }\r\n\r\n  /**\r\n   * Handles onExpandedStateChange events from the PersonListEntry component. Toggels the expanded state of\r\n   * the PersonListEntry of the given PersonBO.\r\n   *\r\n   * @param {person} PersonBO of the PersonListEntry to be toggeled\r\n   */\r\n  onExpandedStateChange = person => {\r\n    // console.log(personID);\r\n    // Set expandend person entry to null by default\r\n    let newID = null;\r\n\r\n    // If same person entry is clicked, collapse it else expand a new one\r\n    if (person.getID() !== this.state.expandedPersonID) {\r\n      // Expand the person entry with personID\r\n      newID = person.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedPersonID: newID,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles onPersonDeleted events from the PersonListEntry component\r\n   *\r\n   * @param {person} PersonBO of the PersonListEntry to be deleted\r\n   */\r\n  personDeleted = person => {\r\n    const newPersonList = this.state.persons.filter(personFromState => personFromState.getID() !== person.getID());\r\n    this.setState({\r\n      persons: newPersonList,\r\n      filteredPersons: [...newPersonList],\r\n      showPersonForm: false\r\n    });\r\n  }\r\n\r\n  /** Handles the onClick event of the add person button */\r\n  addPersonButtonClicked = event => {\r\n    // Do not toggle the expanded state\r\n    event.stopPropagation();\r\n    //Show the CustmerForm\r\n    this.setState({\r\n      showPersonForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the PersonForm */\r\n  personFormClosed = person => {\r\n    // person is not null and therefore created\r\n    if (person) {\r\n      const newPersonList = [...this.state.persons, person];\r\n      this.setState({\r\n        persons: newPersonList,\r\n        filteredPersons: [...newPersonList],\r\n        showPersonForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showPersonForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handels onChange events of the person filter text field */\r\n  filterFieldValueChange = event => {\r\n    const value = event.target.value.toLowerCase();\r\n    this.setState({\r\n      filteredPersons: this.state.persons.filter(person => {\r\n        let nameContainsValue = person.getName().toLowerCase().includes(value);\r\n        let roleContainsValue = person.getRole().toLowerCase().includes(value);\r\n\r\n        return nameContainsValue || roleContainsValue;\r\n      }),\r\n      personFilter: value\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the clear filter button */\r\n  clearFilterFieldButtonClicked = () => {\r\n    // Reset the filter\r\n    this.setState({\r\n      filteredPersons: [...this.state.persons],\r\n      personFilter: ''\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { filteredPersons, personFilter, expandedPersonID, loadingInProgress, error, showPersonForm } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid className={classes.personFilter} container spacing={1} justify='flex-start' alignItems='center'>\r\n          <Grid item>\r\n            <Typography>\r\n              Filter person list by name:\r\n              </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              id='personFilter'\r\n              type='text'\r\n              value={personFilter}\r\n              onChange={this.filterFieldValueChange}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position='end'>\r\n                  <IconButton onClick={this.clearFilterFieldButtonClicked}>\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </InputAdornment>,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs />\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addPersonButtonClicked}>\r\n              Add Person\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          // Show the list of PersonListEntry components\r\n          // Do not use strict comparison, since expandedPersonID maybe a string if given from the URL parameters\r\n          filteredPersons.map(person =>\r\n            <PersonListEntry key={person.getID()} person={person} expandedState={expandedPersonID === person.getID()}\r\n              onExpandedStateChange={this.onExpandedStateChange}\r\n              onPersonDeleted={this.personDeleted}\r\n            />)\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n\r\n        <PersonForm show={showPersonForm} onClose={this.personFormClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  personFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nPersonList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(PersonList));","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleDetails.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js",["261"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllParticipationList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ModuleBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ParticipationBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectTypeBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StudentBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\RatingBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js",["262"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Paper } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\n\r\n/**\r\n * Renders a AccountBO object within a ListEntry and provides a delete button to delete it.\r\n *\r\n * @see See Material-UIs [Lists](https://material-ui.com/components/lists/)\r\n * @see See Material-UIs [ListItem](https://material-ui.com/api/list-item/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ProjectDetail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init state\r\n    this.state = {\r\n      customer: null,\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProject();\r\n  }\r\n\r\n  /** gets the balance for this account */\r\n  getProject = () => {\r\n    ManagementAPI.getAPI().getProject(this.props.projectID).then(project =>\r\n      this.setState({\r\n        project: project,\r\n        loadingInProgress: false,\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          project: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, projectID, ownerID } = this.props;\r\n    const { project, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' className={classes.root}>\r\n\r\n        <Typography variant='h6'>\r\n          Project\r\n        </Typography>\r\n        <Typography className={classes.ProjectEntry}>\r\n          ID: {projectID}\r\n        </Typography>\r\n        {\r\n          project ?\r\n            <Typography>\r\n              Project: {project.getName()}, {project.getSemester()},{project.getModule()},\r\n              {project.getShortDescription()}, {project.getExternalPartnerlist()}, {project.getCapacity()},\r\n              {project.getBDAP()}, {project.getBBLP()}, {project.getBDLP()}, {project.getPDL()}, {project.getLanguage()},\r\n              {project.getRoom()}, {project.getSpecialRoom()}, {project.getFlag()}, {project.getStatus()},\r\n              {project.getProjectType()}, {project.getOwner()}\r\n            </Typography>\r\n            : null\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={loadingError} contextErrorMsg={`The data of project id ${projectID} could not be loaded.`} onReload={this.getProject} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  projectEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDetail.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The projectID to be rendered */\r\n  projectID: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDetail);","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingListEntry.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingDetails.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProfileDropDown.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectListEntry.js",["263","264"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectForm from './dialogs/ProjectForm';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\n//import ParticipationList from './ParticipationList';\r\nimport ProjectList from './ProjectList';\r\n\r\n\r\n/**\r\n * Renders a ProjectBO object within a expandable/collapsible ProjectListEntry with the project manipulation\r\n * functions. If expanded, it renders a ParticipationList.\r\n *\r\n * @see See [AccountList](#participationlist)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ProjectListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      project: props.project,\r\n      //participations: props.participations,\r\n      showProjectForm: false,\r\n      showProjectDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n  /** Handles onParticipationDelete events from an ParticipationListEntry  */\r\n  //deleteParticipationHandler = (deletedParticipation) => {\r\n    // console.log(deletedParticipation.getID());\r\n    //this.setState({\r\n      //participations: this.state.participations.filter(participation => participation.getID() !== deletedParticipation.getID())\r\n    //})\r\n  //}\r\n\r\n  /** Handles the onClick event of the edit project button */\r\n  editProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectForm */\r\n  projectFormClosed = (project) => {\r\n    // project is not null and therefor changed\r\n    if (project) {\r\n      this.setState({\r\n        project: project,\r\n        showProjectForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showProjectForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete project button */\r\n  deleteProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectDeleteDialog */\r\n  deleteProjectDialogClosed = (project) => {\r\n    // if project is not null, delete it\r\n    if (project) {\r\n      this.props.onProjectDeleted(project);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showProjectDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, showProjectForm, showProjectDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()}, {project.getOwner()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editProjectButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteProjectButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of Participations</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <ProjectForm show={showProjectForm} project={project} onClose={this.projectFormClosed} />\r\n        <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ProjectBO to be rendered */\r\n  project: PropTypes.object.isRequired,\r\n  /** The state of this ProjectListEntry. If true the customer is shown with its participations */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ProjectListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(ProjectBO project)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this project.\r\n   *\r\n   * Signature: onProjectDelete(ProjectBO project)\r\n   */\r\n  onProjectDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectListEntry);\r\n","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonListEntry.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\Role.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StatusBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\SemesterBO.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentListEntry.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js",["265"],"\r\n\r\nexport default class BusinessObject {\r\n\r\n\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.creation_time = null;\r\n    }\r\n\r\n\r\n    setCreationTime(aCreationTime) {\r\n        this.creation_time = aCreationTime;\r\n    }\r\n\r\n    getCreationTime() {\r\n        return this.creation_time;\r\n    }\r\n\r\n\r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n\r\n    toString() {\r\n        let result = \" \";\r\n        for (var prop in this) {\r\n        result += prop + \":\" + this [prop] +\" \";\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationForm.js",[],["266","267"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleListEntry.js",["268"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ModuleForm from './dialogs/ModuleForm';\r\nimport ModuleDeleteDialog from './dialogs/ModuleDeleteDialog';\r\n\r\n\r\nclass ModuleListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      module: props.module,\r\n      showModuleForm: false,\r\n      showModuleDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.module);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the edit Module button */\r\n  editModuleButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showModuleForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ModuleForm */\r\n  moduleFormClosed = (module) => {\r\n    // module is not null and there for changed\r\n    if (module) {\r\n      this.setState({\r\n        module: module,\r\n        showModuleForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showModuleForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete module button */\r\n  deleteModuleButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showModuleDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ModuleDeleteDialog */\r\n  deleteModuleDialogClosed = (module) => {\r\n    // if module is not null, delete it\r\n    if (module) {\r\n      this.props.onModuleDeleted(module);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showModuleDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { module, showModuleForm, showModuleDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`module${module.getID()}accountpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{module.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editModuleButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteModuleButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of module</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <ModuleForm show={showModuleForm} module={module} onClose={this.moduleFormClosed} />\r\n        <ModuleDeleteDialog show={showModuleDeleteDialog} module={module} onClose={this.deleteModuleDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nModuleListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ModuleBO to be rendered */\r\n  module: PropTypes.object.isRequired,\r\n  /** The state of this ModuleListEntry. If true the module is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ModuleListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(ModuleBO module)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this module.\r\n   *\r\n   * Signature: onModuleDelete(ModuleBO module)\r\n   */\r\n  onModuleDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ModuleListEntry);\r\n","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeList.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterListEntry.js",["269"],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeForm.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeListEntry.js",["270"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectTypeForm from './dialogs/ProjectTypeForm';\r\nimport ProjectTypeDeleteDialog from './dialogs/ProjectTypeDeleteDialog';\r\n\r\n\r\nclass ProjectTypeListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      projectType: props.projectType,\r\n      showProjectTypeForm: false,\r\n      showProjectTypeDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.projectType);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the edit ProjectType button */\r\n  editProjectTypeButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectTypeForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectTypeForm */\r\n  projectTypeFormClosed = (projectType) => {\r\n    // projectType is not null and there for changed\r\n    if (projectType) {\r\n      this.setState({\r\n        projectType: projectType,\r\n        showProjectTypeForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showProjectTypeForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete projectType button */\r\n  deleteProjectTypeButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectTypeDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectTypeDeleteDialog */\r\n  deleteProjectTypeDialogClosed = (projectType) => {\r\n    // if projectType is not null, delete it\r\n    if (projectType) {\r\n      this.props.onProjectTypeDeleted(projectType);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showProjectTypeDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { projectType, showProjectTypeForm, showProjectTypeDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`projectType${projectType.getID()}panel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{projectType.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editProjectTypeButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteProjectTypeButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of projectType</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <ProjectTypeForm show={showProjectTypeForm} projectType={projectType} onClose={this.projectTypeFormClosed} />\r\n        <ProjectTypeDeleteDialog show={showProjectTypeDeleteDialog} projectType={projectType} onClose={this.deleteProjectTypeDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectTypeListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ModuleBO to be rendered */\r\n  projectType: PropTypes.object.isRequired,\r\n  /** The state of this ModuleListEntry. If true the module is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ModuleListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(ModuleBO module)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this module.\r\n   *\r\n   * Signature: onModuleDelete(ModuleBO module)\r\n   */\r\n  onProjectTypeDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectTypeListEntry);\r\n","D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterDeleteDialog.js",[],"D:\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeDeleteDialog.js",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":21},{"ruleId":"271","replacedBy":"279"},{"ruleId":"273","replacedBy":"280"},{"ruleId":"271","replacedBy":"281"},{"ruleId":"273","replacedBy":"282"},{"ruleId":"275","severity":1,"message":"283","line":8,"column":8,"nodeType":"277","messageId":"278","endLine":8,"endColumn":27},{"ruleId":"275","severity":1,"message":"284","line":161,"column":81,"nodeType":"277","messageId":"278","endLine":161,"endColumn":86},{"ruleId":"275","severity":1,"message":"285","line":2,"column":41,"nodeType":"277","messageId":"278","endLine":2,"endColumn":45},{"ruleId":"275","severity":1,"message":"286","line":58,"column":33,"nodeType":"277","messageId":"278","endLine":58,"endColumn":40},{"ruleId":"275","severity":1,"message":"287","line":3,"column":63,"nodeType":"277","messageId":"278","endLine":3,"endColumn":79},{"ruleId":"275","severity":1,"message":"288","line":9,"column":8,"nodeType":"277","messageId":"278","endLine":9,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":33,"column":32,"nodeType":"291","messageId":"292","endLine":33,"endColumn":43,"fix":"293"},{"ruleId":"271","replacedBy":"294"},{"ruleId":"273","replacedBy":"295"},{"ruleId":"275","severity":1,"message":"287","line":3,"column":63,"nodeType":"277","messageId":"278","endLine":3,"endColumn":79},{"ruleId":"275","severity":1,"message":"287","line":3,"column":63,"nodeType":"277","messageId":"278","endLine":3,"endColumn":79},{"ruleId":"275","severity":1,"message":"287","line":3,"column":63,"nodeType":"277","messageId":"278","endLine":3,"endColumn":79},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'ManagementAPI' is defined but never used.","Identifier","unusedVar",["296"],["297"],["296"],["297"],"'ContextErrorMessage' is defined but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","'ownerID' is assigned a value but never used.","'AccordionDetails' is defined but never used.","'ProjectList' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property prop.","MemberExpression","unexpectedWhitespace",{"range":"298","text":"299"},["296"],["297"],"no-global-assign","no-unsafe-negation",[517,518],""]