[{"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js":"1","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js":"2","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js":"3","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js":"4","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllRatingList.js":"5","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js":"6","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js":"7","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingList.js":"8","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentList.js":"9","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonList.js":"10","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js":"11","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllParticipationList.js":"12","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectList.js":"13","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js":"14","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js":"15","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js":"16","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js":"17","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingDetails.js":"18","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonDetails.js":"19","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js":"20","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ParticipationBO.js":"21","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ModuleBO.js":"22","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\SemesterBO.js":"23","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectTypeBO.js":"24","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StatusBO.js":"25","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StudentBO.js":"26","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\RatingBO.js":"27","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js":"28","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\Role.js":"29","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectBO.js":"30","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingListEntry.js":"31","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentForm.js":"32","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonForm.js":"33","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentListEntry.js":"34","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonListEntry.js":"35","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingForm.js":"36","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleDetails.js":"37","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectListEntry.js":"38","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProfileDropDown.js":"39","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectForm.js":"40","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js":"41","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js":"42","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingDeleteDialog.js":"43","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentDeleteDialog.js":"44","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonDeleteDialog.js":"45","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectDeleteDialog.js":"46","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationForm.js":"47","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationDeleteDialog.js":"48","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllModuleList.js":"49","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleForm.js":"50","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleListEntry.js":"51","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleList.js":"52","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleDeleteDialog.js":"53","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeList.js":"54","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeListEntry.js":"55","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeForm.js":"56","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeDeleteDialog.js":"57","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\index.js":"58","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterList.js":"59","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterListEntry.js":"60","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterForm.js":"61","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterDeleteDialog.js":"62"},{"size":149,"mtime":1610618157357,"results":"63","hashOfConfig":"64"},{"size":6061,"mtime":1611919329164,"results":"65","hashOfConfig":"64"},{"size":451,"mtime":1610618157264,"results":"66","hashOfConfig":"64"},{"size":1449,"mtime":1611919329167,"results":"67","hashOfConfig":"64"},{"size":2250,"mtime":1611165500092,"results":"68","hashOfConfig":"64"},{"size":2320,"mtime":1611302056545,"results":"69","hashOfConfig":"64"},{"size":43061,"mtime":1611933380127,"results":"70","hashOfConfig":"64"},{"size":7397,"mtime":1610994735925,"results":"71","hashOfConfig":"64"},{"size":7631,"mtime":1611504749406,"results":"72","hashOfConfig":"64"},{"size":7498,"mtime":1611927055341,"results":"73","hashOfConfig":"64"},{"size":2217,"mtime":1611609606911,"results":"74","hashOfConfig":"64"},{"size":2457,"mtime":1611860132604,"results":"75","hashOfConfig":"64"},{"size":9260,"mtime":1611919329178,"results":"76","hashOfConfig":"64"},{"size":1121,"mtime":1611919329193,"results":"77","hashOfConfig":"64"},{"size":1892,"mtime":1611065334745,"results":"78","hashOfConfig":"64"},{"size":1151,"mtime":1610994735933,"results":"79","hashOfConfig":"64"},{"size":2055,"mtime":1611504749407,"results":"80","hashOfConfig":"64"},{"size":3040,"mtime":1610994735923,"results":"81","hashOfConfig":"64"},{"size":2789,"mtime":1611174726061,"results":"82","hashOfConfig":"64"},{"size":3432,"mtime":1611322558887,"results":"83","hashOfConfig":"64"},{"size":892,"mtime":1611302056543,"results":"84","hashOfConfig":"64"},{"size":729,"mtime":1611165500086,"results":"85","hashOfConfig":"64"},{"size":982,"mtime":1611927055340,"results":"86","hashOfConfig":"64"},{"size":821,"mtime":1611927055339,"results":"87","hashOfConfig":"64"},{"size":788,"mtime":1610618157289,"results":"88","hashOfConfig":"64"},{"size":924,"mtime":1611165500089,"results":"89","hashOfConfig":"64"},{"size":1424,"mtime":1611745748918,"results":"90","hashOfConfig":"64"},{"size":1164,"mtime":1611927055337,"results":"91","hashOfConfig":"64"},{"size":935,"mtime":1610994735894,"results":"92","hashOfConfig":"64"},{"size":3883,"mtime":1611919329172,"results":"93","hashOfConfig":"64"},{"size":5093,"mtime":1611165500096,"results":"94","hashOfConfig":"64"},{"size":9534,"mtime":1611745748919,"results":"95","hashOfConfig":"64"},{"size":8343,"mtime":1611165500101,"results":"96","hashOfConfig":"64"},{"size":5435,"mtime":1611610309899,"results":"97","hashOfConfig":"64"},{"size":4870,"mtime":1611605053480,"results":"98","hashOfConfig":"64"},{"size":10822,"mtime":1611165500103,"results":"99","hashOfConfig":"64"},{"size":2641,"mtime":1611165500093,"results":"100","hashOfConfig":"64"},{"size":5456,"mtime":1611920089708,"results":"101","hashOfConfig":"64"},{"size":4156,"mtime":1610994735939,"results":"102","hashOfConfig":"64"},{"size":21231,"mtime":1611919329181,"results":"103","hashOfConfig":"64"},{"size":479,"mtime":1611336434268,"results":"104","hashOfConfig":"64"},{"size":579,"mtime":1611336434264,"results":"105","hashOfConfig":"64"},{"size":4472,"mtime":1610994735944,"results":"106","hashOfConfig":"64"},{"size":3811,"mtime":1611165500103,"results":"107","hashOfConfig":"64"},{"size":4258,"mtime":1611302056558,"results":"108","hashOfConfig":"64"},{"size":4260,"mtime":1611336434272,"results":"109","hashOfConfig":"64"},{"size":8974,"mtime":1611311700899,"results":"110","hashOfConfig":"64"},{"size":4471,"mtime":1610994735936,"results":"111","hashOfConfig":"64"},{"size":2255,"mtime":1611349799070,"results":"112","hashOfConfig":"64"},{"size":8253,"mtime":1611860132621,"results":"113","hashOfConfig":"64"},{"size":4552,"mtime":1611349799074,"results":"114","hashOfConfig":"64"},{"size":7478,"mtime":1611349799072,"results":"115","hashOfConfig":"64"},{"size":4237,"mtime":1611349799076,"results":"116","hashOfConfig":"64"},{"size":7871,"mtime":1611609606909,"results":"117","hashOfConfig":"64"},{"size":4825,"mtime":1611509982909,"results":"118","hashOfConfig":"64"},{"size":9340,"mtime":1611927055343,"results":"119","hashOfConfig":"64"},{"size":4347,"mtime":1611504749408,"results":"120","hashOfConfig":"64"},{"size":574,"mtime":1611919387950,"results":"121","hashOfConfig":"64"},{"size":7780,"mtime":1611605053481,"results":"122","hashOfConfig":"64"},{"size":4624,"mtime":1611860132617,"results":"123","hashOfConfig":"64"},{"size":9294,"mtime":1611919329191,"results":"124","hashOfConfig":"64"},{"size":4452,"mtime":1611919329189,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1k3726q",{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"247","usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\index.js",[],["263","264"],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\App.js",["265"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport ManagementAPI from './api/ManagementAPI';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport firebaseConfig from './Firebaseconfig';\r\nimport Theme from './Theme';\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About';\r\nimport SignIn from './components/pages/SignIn';\r\nimport LoadingProgress from './components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\r\nimport ModuleList from \"./components/ModuleList\";\r\nimport ProjectList from \"./components/ProjectList\";\r\nimport PersonList from \"./components/PersonList\";\r\nimport SemesterList from \"./components/SemesterList\";\r\nimport StudentList from \"./components/StudentList\";\r\nimport ProjectTypeList from './components/ProjectTypeList';\r\n//import ParticipationListStudent from \"./components/ParticipationListStudent\";\r\n\r\n\r\n/**\r\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the\r\n * user to the respective pages, react-router-dom ist used.\r\n *\r\n * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\r\n * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\r\n * @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass App extends React.Component {\r\n\r\n\t/** Constructor of the app, which initializes firebase  */\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// Init an empty state\r\n\t\tthis.state = {\r\n\t\t\tcurrentUser: null,\r\n\t\t\tcurrentUserRole: null,\r\n\t\t\tappError: null,\r\n\t\t\tauthError: null,\r\n\t\t\tauthLoading: false\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Create an error boundary for this app and recieve all errors from below the component tree.\r\n\t *\r\n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\r\n \t */\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { appError: error };\r\n\t}\r\n\r\n\t/** Handles firebase users logged in state changes  */\r\n\thandleAuthStateChange = user => {\r\n\t\tif (user) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tauthLoading: true\r\n\t\t\t});\r\n\t\t\t// The user is signed in\r\n\t\t\tuser.getIdToken().then(token => {\r\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\r\n\t\t\t\t// able to verify the token against the API.\r\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\r\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\r\n\t\t\t\t// user information.\r\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\r\n\r\n\t\t\t\t// Set the user not before the token arrived\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentUser: user,\r\n\t\t\t\t\tauthError: null,\r\n\t\t\t\t\tauthLoading: false\r\n\t\t\t\t});\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tauthError: e,\r\n\t\t\t\t\tauthLoading: false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// User has logged out, so clear the id token\r\n\t\t\tdocument.cookie = 'token=;path=/';\r\n\r\n\t\t\t// Set the logged out user to null\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentUser: null,\r\n\t\t\t\tauthLoading: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\r\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\r\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\r\n\t */\r\n\thandleSignIn = () => {\r\n\t\tthis.setState({\r\n\t\t\tauthLoading: true\r\n\t\t});\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tfirebase.auth().signInWithRedirect(provider);\r\n\t}\r\n\r\n\t/**\r\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\r\n\t * Initializes the firebase SDK.\r\n\t *\r\n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\r\n\t */\r\n\tcomponentDidMount() {\r\n\t\tfirebase.initializeApp(firebaseConfig);\r\n\t\tfirebase.auth().languageCode = 'en';\r\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n\t}\r\n\r\n\t/** Renders the whole app */\r\n\trender() {\r\n\t\tconst { currentUser, appError, authError, authLoading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={Theme}>\r\n\t\t\t\t{/* Global CSS reset and browser normalization. CssBaseline kickstarts an elegant, consistent, and simple baseline to build upon. */}\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t\t\t<Container maxWidth='lg'>\r\n\t\t\t\t\t\t<Header user={currentUser} />\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Is a user signed in?\r\n\t\t\t\t\t\t        currentUser ?\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Redirect from='/' to='persons' />\r\n\t\t\t\t\t\t\t\t\t<Route exact path='/persons'>\r\n\t\t\t\t\t\t\t\t\t\t<PersonList />\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t\t<Route path='/projects'>\r\n\t\t\t\t\t\t\t\t\t\t<ProjectList/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t\t<Route path='/modules'>\r\n\t\t\t\t\t\t\t\t\t\t<ModuleList/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t\t<Route path='/students'>\r\n\t\t\t\t\t\t\t\t\t\t<StudentList/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t\t<Route path='/projectTypes'>\r\n\t\t\t\t\t\t\t\t\t\t<ProjectTypeList/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t\t<Route path='/semester'>\r\n\t\t\t\t\t\t\t\t\t\t<SemesterList/>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t\t<Route path='/about' component={About} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t:\r\n\r\n\t\t\t\t\t\t\t\t// else show the sign in page\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Redirect to='/index.html' />\r\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sighn in process.`} onReload={this.handleSignIn} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Router>\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Firebaseconfig.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\Theme.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllRatingList.js",[],["266","267"],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllProjectList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ManagementAPI.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonList.js",["268","269"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport { withRouter } from 'react-router-dom';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport PersonForm from './dialogs/PersonForm';\r\nimport PersonListEntry from './PersonListEntry';\r\n\r\n/**\r\n * Controlls a list of PersonListEntrys to create a accordion for each person.\r\n *\r\n * @see See [PersonListEntry](#personlistentry)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass PersonList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n//Achtung: hier Änderung von \"expandPerson\" in person\r\n    if (this.props.location.person) {\r\n      expandedID = this.props.location.person.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n      persons: [],\r\n      filteredPersons: [],\r\n      personFilter: '',\r\n      error: null,\r\n      loadingInProgress: false,\r\n      expandedPersonID: expandedID,\r\n      showPersonForm: false\r\n    };\r\n  }\r\n\r\n  /** Fetches all PersonBOs from the backend */\r\n  getPersons = () => {\r\n  console.log(\"vor fetch\")\r\n    ManagementAPI.getAPI().getPersons().then(personBOs =>\r\n        this.setState({               // Set new state when PersonBOs have been fetched\r\n          persons: personBOs,\r\n          filteredPersons: [...personBOs], // store a copy\r\n          loadingInProgress: false,   // disable loading indicator\r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({             // Reset state with error from catch\r\n            persons: [],\r\n            loadingInProgress: false, // disable loading indicator\r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getPersons();\r\n  }\r\n\r\n  /**\r\n   * Handles onExpandedStateChange events from the PersonListEntry component. Toggels the expanded state of\r\n   * the PersonListEntry of the given PersonBO.\r\n   *\r\n   * @param {person} PersonBO of the PersonListEntry to be toggeled\r\n   */\r\n  onExpandedStateChange = person => {\r\n    // console.log(personID);\r\n    // Set expandend person entry to null by default\r\n    let newID = null;\r\n\r\n    // If same person entry is clicked, collapse it else expand a new one\r\n    if (person.getID() !== this.state.expandedPersonID) {\r\n      // Expand the person entry with personID\r\n      newID = person.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedPersonID: newID,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles onPersonDeleted events from the PersonListEntry component\r\n   *\r\n   * @param {person} PersonBO of the PersonListEntry to be deleted\r\n   */\r\n  personDeleted = person => {\r\n    const newPersonList = this.state.persons.filter(personFromState => personFromState.getID() !== person.getID());\r\n    this.setState({\r\n      persons: newPersonList,\r\n      filteredPersons: [...newPersonList],\r\n      showPersonForm: false\r\n    });\r\n  }\r\n\r\n  /** Handles the onClick event of the add person button */\r\n  addPersonButtonClicked = event => {\r\n    // Do not toggle the expanded state\r\n    event.stopPropagation();\r\n    //Show the CustmerForm\r\n    this.setState({\r\n      showPersonForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the PersonForm */\r\n  personFormClosed = person => {\r\n    // person is not null and therefore created\r\n    if (person) {\r\n      const newPersonList = [...this.state.persons, person];\r\n      this.setState({\r\n        persons: newPersonList,\r\n        filteredPersons: [...newPersonList],\r\n        showPersonForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showPersonForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handels onChange events of the person filter text field */\r\n  filterFieldValueChange = event => {\r\n    const value = event.target.value.toLowerCase();\r\n    this.setState({\r\n      filteredPersons: this.state.persons.filter(person => {\r\n        let nameContainsValue = person.getName().toLowerCase().includes(value);\r\n        let roleContainsValue = person.getRole().toLowerCase().includes(value);\r\n\r\n        return nameContainsValue || roleContainsValue;\r\n      }),\r\n      personFilter: value\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the clear filter button */\r\n  clearFilterFieldButtonClicked = () => {\r\n    // Reset the filter\r\n    this.setState({\r\n      filteredPersons: [...this.state.persons],\r\n      personFilter: ''\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { filteredPersons, personFilter, expandedPersonID, loadingInProgress, error, showPersonForm } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid className={classes.personFilter} container spacing={1} justify='flex-start' alignItems='center'>\r\n          <Grid item>\r\n            <Typography>\r\n              Filter person list by name:\r\n              </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              id='personFilter'\r\n              type='text'\r\n              value={personFilter}\r\n              onChange={this.filterFieldValueChange}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position='end'>\r\n                  <IconButton onClick={this.clearFilterFieldButtonClicked}>\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </InputAdornment>,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs />\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addPersonButtonClicked}>\r\n              Add Person\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {\r\n          // Show the list of PersonListEntry components\r\n          // Do not use strict comparison, since expandedPersonID maybe a string if given from the URL parameters\r\n          filteredPersons.map(person =>\r\n            <PersonListEntry key={person.getID()} person={person} expandedState={expandedPersonID === person.getID()}\r\n              onExpandedStateChange={this.onExpandedStateChange}\r\n              onPersonDeleted={this.personDeleted}\r\n            />)\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n\r\n        <PersonForm show={showPersonForm} onClose={this.personFormClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  personFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nPersonList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(PersonList));","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllParticipationList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\About.js",["270"],"import React from 'react'\r\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    margin: theme.spacing(1),\r\n  }\r\n}));\r\n\r\n/**\r\n * Shows the about page with the impressum\r\n *\r\n */\r\nfunction About() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Typography variant='h6'>\r\n          Python Projectmanagementsystem Project\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          React Frontend written by Gruppe 10\r\n        </Typography>\r\n        <Typography>\r\n          Python Backend written by Gruppe 10\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='body2'>\r\n          © Hochschule der Medien 2020, all rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default About;","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\pages\\SignIn.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\LoadingProgress.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ContextErrorMessage.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingDetails.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonDetails.js",["271"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Paper } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\n\r\n/**\r\n * Renders a AccountBO object within a ListEntry and provides a delete button to delete it.\r\n\r\n * @author [Enes Tepeli]\r\n */\r\nclass PersonDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init state\r\n    this.state = {\r\n      Person: null,\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getPerson();\r\n  }\r\n\r\n  /** gets the balance for this account */\r\n  getPerson = () => {\r\n    ManagementAPI.getAPI().getPerson(this.props.personID).then(person =>\r\n      this.setState({\r\n        person: person,\r\n        loadingInProgress: false,\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          person: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, PersonID } = this.props;\r\n    const { person, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' className={classes.root}>\r\n\r\n        <Typography variant='h6'>\r\n          Person\r\n        </Typography>\r\n        <Typography>\r\n          ID: {person.getID()}\r\n        </Typography>\r\n        {\r\n          person ?\r\n            <Typography>\r\n              Person: {person.getRole()}\r\n            </Typography>\r\n            : null\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={loadingError} contextErrorMsg={`The data of person id ${person.getID()} could not be loaded.`} onReload={this.getPerson} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  accountEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nPersonDetails.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The customerID to be rendered */\r\n  StudentID: PropTypes.string.isRequired,\r\n  /** The accountID to be rendered */\r\n  PersonID: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(PersonDetails);\r\n",["272","273"],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectDetails.js",["274"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Paper } from '@material-ui/core';\r\nimport ManagementAPI from '../api/ManagementAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\n\r\n/**\r\n * Renders a AccountBO object within a ListEntry and provides a delete button to delete it.\r\n *\r\n * @see See Material-UIs [Lists](https://material-ui.com/components/lists/)\r\n * @see See Material-UIs [ListItem](https://material-ui.com/api/list-item/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ProjectDetail extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init state\r\n    this.state = {\r\n      customer: null,\r\n      loadingInProgress: false,\r\n      loadingError: null,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProject();\r\n  }\r\n\r\n  /** gets the balance for this account */\r\n  getProject = () => {\r\n    ManagementAPI.getAPI().getProject(this.props.projectID).then(project =>\r\n      this.setState({\r\n        project: project,\r\n        loadingInProgress: false,\r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch\r\n          project: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, projectID, ownerID } = this.props;\r\n    const { project, loadingInProgress, loadingError } = this.state;\r\n\r\n    return (\r\n      <Paper variant='outlined' className={classes.root}>\r\n\r\n        <Typography variant='h6'>\r\n          Project\r\n        </Typography>\r\n        <Typography className={classes.ProjectEntry}>\r\n          ID: {projectID}\r\n        </Typography>\r\n        {\r\n          project ?\r\n            <Typography>\r\n              Project: {project.getName()}, {project.getSemester()},{project.getModule()},\r\n              {project.getShortDescription()}, {project.getExternalPartnerlist()}, {project.getCapacity()},\r\n              {project.getBDAP()}, {project.getBBLP()}, {project.getBDLP()}, {project.getPDL()}, {project.getLanguage()},\r\n              {project.getRoom()}, {project.getSpecialRoom()}, {project.getFlag()}, {project.getStatus()},\r\n              {project.getProjectType()}, {project.getOwner()}\r\n            </Typography>\r\n            : null\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={loadingError} contextErrorMsg={`The data of project id ${projectID} could not be loaded.`} onReload={this.getProject} />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  projectEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDetail.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The projectID to be rendered */\r\n  projectID: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDetail);","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ParticipationBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ModuleBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\SemesterBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectTypeBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StatusBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\StudentBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\RatingBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\PersonBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\Role.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\ProjectBO.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\RatingListEntry.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\StudentListEntry.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\PersonListEntry.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleDetails.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectListEntry.js",["275","276"],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProfileDropDown.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\NamedBusinessObject.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\BusinessObject.js",["277"],"\r\n\r\nexport default class BusinessObject {\r\n\r\n\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.creation_time = null;\r\n    }\r\n\r\n\r\n    setCreationTime(aCreationTime) {\r\n        this.creation_time = aCreationTime;\r\n    }\r\n\r\n    getCreationTime() {\r\n        return this.creation_time;\r\n    }\r\n\r\n\r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n\r\n    toString() {\r\n        let result = \" \";\r\n        for (var prop in this) {\r\n        result += prop + \":\" + this [prop] +\" \";\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\RatingDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\StudentDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\PersonDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ParticipationDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\AllModuleList.js",[],["278","279"],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleListEntry.js",["280"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ModuleForm from './dialogs/ModuleForm';\r\nimport ModuleDeleteDialog from './dialogs/ModuleDeleteDialog';\r\n\r\n\r\nclass ModuleListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      module: props.module,\r\n      showModuleForm: false,\r\n      showModuleDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.module);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the edit Module button */\r\n  editModuleButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showModuleForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ModuleForm */\r\n  moduleFormClosed = (module) => {\r\n    // module is not null and there for changed\r\n    if (module) {\r\n      this.setState({\r\n        module: module,\r\n        showModuleForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showModuleForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete module button */\r\n  deleteModuleButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showModuleDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ModuleDeleteDialog */\r\n  deleteModuleDialogClosed = (module) => {\r\n    // if module is not null, delete it\r\n    if (module) {\r\n      this.props.onModuleDeleted(module);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showModuleDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { module, showModuleForm, showModuleDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`module${module.getID()}accountpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{module.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editModuleButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteModuleButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of module</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <ModuleForm show={showModuleForm} module={module} onClose={this.moduleFormClosed} />\r\n        <ModuleDeleteDialog show={showModuleDeleteDialog} module={module} onClose={this.deleteModuleDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nModuleListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ModuleBO to be rendered */\r\n  module: PropTypes.object.isRequired,\r\n  /** The state of this ModuleListEntry. If true the module is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ModuleListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(ModuleBO module)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this module.\r\n   *\r\n   * Signature: onModuleDelete(ModuleBO module)\r\n   */\r\n  onModuleDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ModuleListEntry);\r\n","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ModuleList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ModuleDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\ProjectTypeListEntry.js",["281","282"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectTypeForm from './dialogs/ProjectTypeForm';\r\nimport ProjectTypeDeleteDialog from './dialogs/ProjectTypeDeleteDialog';\r\n\r\n\r\nclass ProjectTypeListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      projectType: props.projectType,\r\n      showProjectTypeForm: false,\r\n      showProjectTypeDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.projectType);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the edit ProjectType button */\r\n  editProjectTypeButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectTypeForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectTypeForm */\r\n  projectTypeFormClosed = (projectType) => {\r\n    // projectType is not null and there for changed\r\n    if (projectType) {\r\n      this.setState({\r\n        projectType: projectType,\r\n        showProjectTypeForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showProjectTypeForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete projectType button */\r\n  deleteProjectTypeButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectTypeDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectTypeDeleteDialog */\r\n  deleteProjectTypeDialogClosed = (projectType) => {\r\n    // if projectType is not null, delete it\r\n    if (projectType) {\r\n      this.props.onProjectTypeDeleted(projectType);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showProjectTypeDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { projectType, showProjectTypeForm, showProjectTypeDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`projectType${projectType.getID()}panel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{projectType.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editProjectTypeButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteProjectTypeButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of projectType</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <ProjectTypeForm show={showProjectTypeForm} projectType={projectType} onClose={this.projectTypeFormClosed} />\r\n        <ProjectTypeDeleteDialog show={showProjectTypeDeleteDialog} projectType={projectType} onClose={this.deleteProjectTypeDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectTypeListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ModuleBO to be rendered */\r\n  projectType: PropTypes.object.isRequired,\r\n  /** The state of this ModuleListEntry. If true the module is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ModuleListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(ModuleBO module)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this module.\r\n   *\r\n   * Signature: onModuleDelete(ModuleBO module)\r\n   */\r\n  onProjectTypeDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectTypeListEntry);\r\n","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\ProjectTypeDeleteDialog.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\api\\index.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterList.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\SemesterListEntry.js",["283"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport SemesterForm from './dialogs/SemesterForm';\r\nimport SemesterDeleteDialog from './dialogs/SemesterDeleteDialog';\r\n\r\n\r\nclass SemesterListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      semester: props.semester,\r\n      showSemesterForm: false,\r\n      showSemesterDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.semester);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the edit Module button */\r\n  editSemesterButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showSemesterForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the SemesterForm */\r\n  semesterFormClosed = (semester) => {\r\n    // module is not null and there for changed\r\n    if (semester) {\r\n      this.setState({\r\n        semester: semester,\r\n        showSemesterForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showSemesterForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete semester button */\r\n  deleteSemesterButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showSemesterDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the SemesterDeleteDialog */\r\n  deleteSemesterDialogClosed = (semester) => {\r\n    // if semester is not null, delete it\r\n    if (semester) {\r\n      this.props.onSemesterDeleted(semester);\r\n    }\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showSemesterDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { semester, showSemesterForm, showSemesterDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`semester${semester.getID()}semesterpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{semester.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editSemesterButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteSemesterButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of semester</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n        </Accordion>\r\n        <SemesterForm show={showSemesterForm} semester={semester} onClose={this.semesterFormClosed} />\r\n        <SemesterDeleteDialog show={showSemesterDeleteDialog} semester={semester} onClose={this.deleteSemesterDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nSemesterListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The SemesterBO to be rendered */\r\n  module: PropTypes.object.isRequired,\r\n  /** The state of this SemesterListEntry.\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this SemesterListEntry\r\n   *\r\n   * Signature: onExpandedStateChange(SemesterBO semester)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /**\r\n   *  Event Handler function which is called after a sucessfull delete of this semester.\r\n   *\r\n   * Signature: onSemesterDelete(SemesterBO semester)\r\n   */\r\n  onModuleDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(SemesterListEntry);","C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterForm.js",[],"C:\\Users\\Yasemin Acikyürek\\PycharmProjects\\SW-Praktikum-Gruppe-10\\E-ProjectManagement\\frontend\\src\\components\\dialogs\\SemesterDeleteDialog.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":21},{"ruleId":"284","replacedBy":"292"},{"ruleId":"286","replacedBy":"293"},{"ruleId":"288","severity":1,"message":"294","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":27},{"ruleId":"288","severity":1,"message":"295","line":161,"column":81,"nodeType":"290","messageId":"291","endLine":161,"endColumn":86},{"ruleId":"288","severity":1,"message":"296","line":2,"column":41,"nodeType":"290","messageId":"291","endLine":2,"endColumn":45},{"ruleId":"288","severity":1,"message":"297","line":54,"column":22,"nodeType":"290","messageId":"291","endLine":54,"endColumn":30},{"ruleId":"284","replacedBy":"298"},{"ruleId":"286","replacedBy":"299"},{"ruleId":"288","severity":1,"message":"300","line":58,"column":33,"nodeType":"290","messageId":"291","endLine":58,"endColumn":40},{"ruleId":"288","severity":1,"message":"301","line":3,"column":63,"nodeType":"290","messageId":"291","endLine":3,"endColumn":79},{"ruleId":"288","severity":1,"message":"302","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":33,"column":32,"nodeType":"305","messageId":"306","endLine":33,"endColumn":43,"fix":"307"},{"ruleId":"284","replacedBy":"308"},{"ruleId":"286","replacedBy":"309"},{"ruleId":"288","severity":1,"message":"301","line":3,"column":63,"nodeType":"290","messageId":"291","endLine":3,"endColumn":79},{"ruleId":"288","severity":1,"message":"301","line":3,"column":63,"nodeType":"290","messageId":"291","endLine":3,"endColumn":79},{"ruleId":"310","severity":1,"message":"311","line":78,"column":13,"nodeType":"312","messageId":"313","endLine":78,"endColumn":37,"fix":"314"},{"ruleId":"288","severity":1,"message":"301","line":3,"column":63,"nodeType":"290","messageId":"291","endLine":3,"endColumn":79},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'ManagementAPI' is defined but never used.","Identifier","unusedVar",["315"],["316"],"'ContextErrorMessage' is defined but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","'PersonID' is assigned a value but never used.",["315"],["316"],"'ownerID' is assigned a value but never used.","'AccordionDetails' is defined but never used.","'ProjectList' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property prop.","MemberExpression","unexpectedWhitespace",{"range":"317","text":"318"},["315"],["316"],"no-useless-rename","Destructuring assignment projecttype unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"319","text":"320"},"no-global-assign","no-unsafe-negation",[517,518],"",[2234,2258],"projecttype"]